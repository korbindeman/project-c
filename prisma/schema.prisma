// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Ogsm {
  id         Int        @id @default(autoincrement())
  slug       String     @unique
  creator    User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  title      String
  objective  String
  goals      Goal[]
  strategies Strategy[]
  userId     Int
  createdAt  DateTime   @default(now())
}

model Goal {
  id        Int      @id @default(autoincrement())
  ogsm      Ogsm     @relation(fields: [ogsmId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  content   String
  ogsmId    Int
  createdAt DateTime @default(now())
}

model Strategy {
  id        Int         @id @default(autoincrement())
  ogsm      Ogsm        @relation(fields: [ogsmId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  content   String
  dashboard Dashboard[]
  actions   Action[]
  ogsmId    Int
  createdAt DateTime    @default(now())
}

model Dashboard {
  id         Int      @id @default(autoincrement())
  strategy   Strategy @relation(fields: [strategyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  content    String
  strategyId Int
  createdAt  DateTime @default(now())
}

model Action {
  id         Int      @id @default(autoincrement())
  strategy   Strategy @relation(fields: [strategyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  content    String
  strategyId Int
  createdAt  DateTime @default(now())
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String
  password      String
  created_ogsms Ogsm[]
  createdAt     DateTime @default(now())
}
